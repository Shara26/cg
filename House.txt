#include<stdio.h>
#include<GL/glut.h>
int xa,ya,xb,yb;
int xc,yc,r;
int x,y;
int xmin,ymin,xmax,ymax;



void BCircle(int xc,int yc,int r){
int x,y,d;
x=0;
y=r;
d=3-2*r;

do{
   glVertex2d(x+xc,y+yc);
   glVertex2d(y+xc,x+yc);
   glVertex2d(-x+xc,y+yc);
   glVertex2d(-y+xc,x+yc);
   glVertex2d(-x+xc,-y+yc);
   glVertex2d(-y+xc,-x+yc);
   glVertex2d(x+xc,-y+yc);
   glVertex2d(y+xc,-x+yc);
   if(d<0){
    x=x+1;
    d=d+4*x+6;
   }
   else{
    x=x+1;
    y=y-1;
    d=d+4*x-4*y+10;
   }
}
while(y>=x);
}

void Bline(int xa,int ya,int xb,int yb){
   int dx,dy,d;
   int c,r,f;
   dx=xb-xa;
   dy=yb-ya;
   
   if(abs(dx)>abs(dy)){
   d=2*abs(dy)-abs(dx);
   if(dx>0){
   c=xa;
   r=ya;
   f=xb;
   
   }
   else{
   c=xb;
   r=yb;
   f=xa;
   }
   while(f>c){
   if(d<0){
   c=c+1;
   d=d+2*abs(dy);
   }
   else{
   c=c+1;
   if(dx>0 && dy>0 || dx<0 && dy<0){
   r=r+1;
   }
   else{
   r=r-1;
   }
   d=d+2*abs(dy)-2*abs(dx);
   }
   glVertex2d(c,r);
   }
   }
   
   else{
   d=2*abs(dx)-abs(dy);
   if(dy>0){
   c=xa;
   r=ya;
   f=yb;
   
   }
   else{
   c=xb;
   r=yb;
   f=ya;
   }
   while(f>r){
   if(d<0){
   r=r+1;
   d=d+2*abs(dx);
   }
   else{
   r=r+1;
   if(dx>0 && dy>0 || dx<0 && dy<0){
   c=c+1;
   }
   else{
   c=c-1;
   }
   d=d+2*abs(dx)-2*abs(dy);
   }
   glVertex2d(c,r);
   }
   }  
}



void DrawShape(){
Bline(100,100,400,100);
Bline(400,100,400,300);
Bline(400,300,100,300);
Bline(100,300,100,100);

Bline(200,100,200,300);
Bline(200,300,150,400);
Bline(100,300,150,400);

Bline(400,300,350,400);
Bline(350,400,150,400);

Bline(125,100,175,100);
Bline(175,100,175,160);
Bline(175,160,125,160);
Bline(125,160,125,100);



BCircle(150,350,15);
}

void Draw(){
 glClear(GL_COLOR_BUFFER_BIT);
 glBegin(GL_POINTS);

 glColor3f(0,0,1);
 glClear(GL_COLOR_BUFFER_BIT);
 glBegin(GL_POINTS);
 glColor3f(0,0,0);
 DrawShape();

 glEnd();
 glFlush();
 
}

int main(int argc,char**argv){
glutInit(&argc,argv);
glutInitDisplayMode(GLUT_SINGLE||GLUT_RGB);
glutInitWindowPosition(0,0);
glutInitWindowSize(640,480);
glutCreateWindow("CG");
glClearColor(1.0,1.0,1.0,0);
gluOrtho2D(0,640,0,480);
glutDisplayFunc(Draw);
glutMainLoop();
return 0;
}